Deployment guide. CentOS 7.

0. DigitalOcean VPS initial setup
    a. https://www.digitalocean.com/community/tutorials/how-to-connect-to-your-droplet-with-ssh
        - ssh root@SERVER_IP_ADDRESS
    b. https://www.digitalocean.com/community/tutorials/initial-server-setup-with-centos-7
        - Create a New User
            adduser demo
            passwd demo
        - Root Privileges
            gpasswd -a demo wheel
        - Add Public Key Authentication. To generate a new key pair, enter the following command at the terminal of your local machine:
            ssh-keygen
        - Copy the Public Key (from local machine)
            ssh-copy-id demo@SERVER_IP_ADDRESS
        - Configure SSH Daemon
            vi /etc/ssh/sshd_config - "PermitRootLogin no"
            systemctl reload sshd
    c. https://www.digitalocean.com/community/tutorials/additional-recommended-steps-for-new-centos-7-servers
        - Configuring a Basic Firewall
            sudo firewall-cmd --permanent --add-service=ssh
            sudo firewall-cmd --permanent --add-service=http
            sudo firewall-cmd --permanent --add-service=https
            sudo firewall-cmd --reload
            sudo systemctl enable firewalld
        - Configure Timezones and Network Time Protocol Synchronization
            sudo timedatectl list-timezones | grep Moscow
            sudo timedatectl set-timezone region/timezone
            sudo timedatectl
            
            sudo yum install ntp
            sudo systemctl start ntpd
            sudo systemctl enable ntpd
        - Create a Swap File
            sudo fallocate -l 1G /swapfile
            sudo chmod 600 /swapfile
            sudo mkswap /swapfile
            sudo swapon /swapfile
            sudo sh -c 'echo "/swapfile none swap sw 0 0" >> /etc/fstab'
        - Take a Snapshot of your Current Configuration
            sudo poweroff
            
1. Apache server + mod_wsgi
    a. Apache install
        sudo yum install httpd
        sudo yum install httpd-devel (for building mod_wsgi)
        sudo systemctl start httpd.service
    b. mod_wsgi install (https://code.google.com/p/modwsgi/wiki/QuickInstallationGuide)
        download from git (https://github.com/GrahamDumpleton/mod_wsgi/releases)
        tar xvfz mod_wsgi-X.Y.tar.gz
        sudo ./configure --with-python=/home/vagrant/.virtualenvs/sn_project/bin/python (virtualenv)
        sudo make
        sudo make install
        
        in httpd.conf add a line:
        LoadModule wsgi_module /usr/lib64/httpd/modules/mod_wsgi.so
        
        sudo systemctl restart httpd
    c. configure vhosts.conf in /etc/httpd/conf.d/
    """
            <VirtualHost 192.168.0.191:80>
                ServerAdmin serge.a.nikiforov@gmail.com
                ServerName sergey-nikiforov
                ServerAlias sergey-nikiforov
                Alias /robots.txt /home/vagrant/www/sergey-nikiforov.com/media/robots.txt
                Alias /favicon.ico /home/vagrant/www/sergey-nikiforov.com/media/favicon.ico

                Alias /static/ /home/vagrant/www/sergey-nikiforov.com/media/

                <Directory /home/vagrant/www/sergey-nikiforov.com/media>
                    Require all granted
                </Directory>

    
                Alias /static/admin/ /usr/lib/python2.7/site-packages/django/contrib/admin/static/admin/
                <Directory /home/.virtualenvs/sn_project/lib/python2.7/site-packages/django/contrib/admin/static/admin>
                    Require all granted
                </Directory>

                WSGIDaemonProcess sergey-nikiforov processes=2 threads=15 python-path=/home/vagrant/django_projects/sergey-nikiforov.com:/home/vagrant/.virtualenvs/sn_project/lib/python2.7/site-packages
                WSGIProcessGroup sergey-nikiforov
                WSGIScriptAlias / /home/vagrant/django_projects/sergey-nikiforov.com/sn_project/wsgi.py process-group=sergey-nikiforov
                
                <Directory /home/vagrant/django_projects/sergey-nikiforov.com/sn_project>
                    <Files wsgi.py>
                        Require all granted
                    </Files>
                </Directory>
            </VirtualHost>
    """




2. MySQL
    a. Install MySQL 5.7 (https://dev.mysql.com/doc/mysql-yum-repo-quick-guide/en/):
        - Download and add the repository (https://dev.mysql.com/downloads/repo/yum/). The download link can be retrieved without registering for an Oracle account. Locate the No thanks, just start my download link and pass the link URL as a parameter to rpm:
            sudo rpm -Uvh --link--
        - install mysql:
            sudo yum install mysql-community-server
        - Start the MySQL server with the following command:
            sudo service mysqld start
            sudo service mysqld status
        - For MySQL 5.7 only: At the initial start up of the server, the following happens, given that the data directory of the server is empty: ... A superuser account 'root'@'localhost' is created. A password for the superuser is set and stored in the error log file. To reveal it, use the following command:
            sudo grep 'temporary password' /var/log/mysqld.log
        - Change the root password as soon as possible by logging in with the generated, temporary password and set a custom password for the superuser account:
            shell> mysql -uroot -pudo apt-get install libmariadbclient-dev
            mysql> ALTER USER 'root'@'localhost' IDENTIFIED BY 'MyNewPass4!';
        - The MySQL daemon should be enabled to start on boot:
            sudo /usr/bin/systemctl enable mysqld

    b. Enable full Unicode (https://mathiasbynens.be/notes/mysql-utf8mb4)
        - Modify connection, client, and server character sets (/etc/my.cnf):
            [client]
            default-character-set = utf8mb4

            [mysql]
            default-character-set = utf8mb4

            [mysqld]
            transaction-isolation = READ-COMMITTED
            innodb_file_per_table = TRUE
            character-set-client-handshake = FALSE
            character-set-server = utf8mb4
            collation-server = utf8mb4_unicode_ci
        - check the settings:
            mysql> SHOW VARIABLES WHERE Variable_name LIKE 'character\_set\_%' OR Variable_name LIKE 'collation%';

    c. Never configure a web application to use the root user to access MySQL. An individual, application-specific user should be used instead.
        - First log into MySQL with an administrative user.
            mysql -u root -p mysql
        - The following steps will describe creating a new database named appdb and granting the appuser full access to the new database. Adjust the hostname from which the user will be connecting and password as necessary.
            mysql> create database appdb;
            mysql> grant all on appdb.* to 'appuser'@'localhost' identified by 'password';
            mysql> quit
            
     d. sudo yum install python-devel mysql-devel
     e. if mariadb - mysql_secure_installation
        innodb_file_format = BARRACUDA
        innodb_large_prefix = ON


2. virtualenvwrapper (http://thecodeship.com/deployment/deploy-django-apache-virtualenv-and-mod_wsgi/)
    a. pip install virtualenvwrapper
       sudo vim ~/.bash_profile
       export WORKON_HOME=$HOME/.virtualenvs
       source /usr/bin/virtualenvwrapper.sh
       source ~/.bash_profile
       mkvirtualenv myprojectenv --no-site-packages
    b. git clone ...
       cd into project dir
       pip install -r requirements.txt
3. memcached
    a. sudo yum install memcached
